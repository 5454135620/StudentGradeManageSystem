/*
 * StudentFindCredit.java
 *
 * Created on __DATE__, __TIME__
 */

package view.student;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;

import javax.swing.table.DefaultTableModel;

import dao.*;
import dbutil.StringUtil;

/**
 *
 * @author  __USER__
 */
public class StudentFindCredit extends javax.swing.JFrame {
	private static String me;
	
	public void setDefaultCloseOperation(int operation) {
		operation = HIDE_ON_CLOSE;
	}
	

	/** Creates new form StudentFindCredit */
	public StudentFindCredit(String me) {
		this.me = me;
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		CnoQ = new javax.swing.JLabel();
		CnoQText = new javax.swing.JTextField();
		FindB = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		Table = new javax.swing.JTable();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("\u5b66\u751f\u5dee\u5206");

		CnoQ.setText("\u8bfe\u7a0b\u53f7\uff1a");

		FindB.setText("\u67e5  \u8be2");
		FindB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				FindBActionPerformed(evt);
			}
		});

		Table.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null } },
				new String[] { "课程号", "课程名", "成绩", "教师号", "教师名", "学分" }) {
			boolean[] canEdit = new boolean[] { false, false, false, false, false, true };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jScrollPane1.setViewportView(Table);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(93, 93, 93).addComponent(CnoQ).addGap(18, 18, 18)
						.addComponent(CnoQText, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18)
						.addComponent(FindB, javax.swing.GroupLayout.PREFERRED_SIZE, 94,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(122, Short.MAX_VALUE))
				.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addGap(32, 32, 32)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(CnoQ)
						.addComponent(FindB).addComponent(CnoQText, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
				.addGap(36, 36, 36).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200,
						javax.swing.GroupLayout.PREFERRED_SIZE)
				.addContainerGap(64, Short.MAX_VALUE)));
		fillTable();
		pack();
	}// </editor-fold>
		//GEN-END:initComponents
		//查分：

	
	
	//根据课程号显示课程信息----按钮
	private void FindBActionPerformed(java.awt.event.ActionEvent evt) {
		String cno =CnoQText.getText();
		selectFillTable(cno);
	}

	//显示所有所选课程的信息
	private void fillTable() {

		DefaultTableModel dModel = (DefaultTableModel) Table.getModel();
		dModel.setRowCount(0);
		SC_Dao sc_DAO = new SC_Dao();
		ResultSet rs = sc_DAO.S_SCSelectGrade(me);
		try {//Cno，Cname，Grade，Tno，Tname,Ccredit
			while (rs.next()) {
				Vector vector = new Vector();
				vector.add(rs.getString(1));
				vector.add(rs.getString(2));
				float grade= rs.getFloat(3);
				
				if(grade==0.0) {vector.add("未录入");} //学生成绩可能没有录入
				else {
					vector.add(grade);
				}
				
				vector.add(rs.getString(4));
				vector.add(rs.getString(5));
				vector.add(rs.getString(6));
			
				dModel.addRow(vector);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			BaseDao.close();
		}
	}
	
	//do 根据课程号显示课程信息
	private void selectFillTable(String Cno) {

		DefaultTableModel dModel = (DefaultTableModel) Table.getModel();
		dModel.setRowCount(0);
		SC_Dao sc_DAO = new SC_Dao();
		ResultSet rs = sc_DAO.S_SCSelectGrade(me,Cno);
		try {//Cno，Cname，Grade，Tno，Tname,Ccredit
			while (rs.next()) {
				Vector vector = new Vector();
				vector.add(rs.getString(1));
				vector.add(rs.getString(2));
				float grade= rs.getFloat(3);
				
				if(grade==0.0) {vector.add("未录入");} //学生成绩可能没有录入
				else {
					vector.add(grade);
				}
				
				vector.add(rs.getString(4));
				vector.add(rs.getString(5));
				vector.add(rs.getString(6));
			
				dModel.addRow(vector);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			BaseDao.close();
		}
	}

	
	
	/**
	* @param args the command line arguments
	*/
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new StudentFindCredit(me).setVisible(true);
			}
		});
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JLabel CnoQ;
	private javax.swing.JTextField CnoQText;
	private javax.swing.JButton FindB;
	private javax.swing.JTable Table;
	private javax.swing.JScrollPane jScrollPane1;
	// End of variables declaration//GEN-END:variables

}